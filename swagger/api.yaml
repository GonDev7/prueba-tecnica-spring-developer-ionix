openapi: "3.0.0"
info:
  description: "Esta es una documentación de servicios para prueba técnica al cargo de desarrollador SpringBoot para empresa IONIX"
  version: "1.0.0"
  title: "Prueba Técnica"
  termsOfService: "TBD"
  contact:
    name: Gonzalo Rojas Mardones
    email: "gonzalo.rojasmardones@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
paths:
  /api/user/create:
    post:
      tags:
        - User
      summary: Allow to create a new user
      description: Allow to create a new user
      operationId: create_user
      requestBody:
        description: Create a new user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Service executed correctly
        '400':
          description: Unauthorized. This will be retouned when no authetication information is provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/users:
    get:
      tags:
        - User
      summary: Allow to obtain a list of users
      description: Allow to obtain a list of users
      operationId: get_users
      responses:
        '200':
          description: Return a list of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        '400':
          description: Unauthorized. This will be retouned when no authetication information is provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/find-user/email:
    get:
      tags:
        - User
      summary: Allow to obtain an user by email
      description: Allow to obtain an user by email
      operationId: get_user_by_email
      parameters:
        - name: email
          in: query
          description: email of user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return an user find by email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Unauthorized. This will be retouned when no authetication information is provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/parameter-encryption:
    post:
      tags:
        - Parameter Encryption
      summary: Allow to encrypt a text string
      description: Allow to encrypt a text string
      operationId: parameter_encryption
      requestBody:
        description: Encrypt a text string
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterEncryptionRequest'
      responses:
        '200':
          description: Service executed correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterEncryptionResponse'
        '400':
          description: Unauthorized. This will be retouned when no authetication information is provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
components:
  schemas:
    UsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        name:
          type: string
          example: "name"
        user_name:
          type: string
          example: "user name"
        email:
          type: string
          example: "email@email.cl"
        phone:
          type: string
          example: "942694957"
    ParameterEncryptionRequest:
      type: object
      properties:
        param:
          type: string
          example: "1-9"
    ParameterEncryptionResponse:
      type: object
      properties:
        responseCode:
          type: string
          example: "200"
        description:
          type: string
          example: "OK"
        elapseTime:
          type: string
          example: "245"
        result:
          type: object
          properties:
            param:
              type: integer
              format: int32
              example: 3
    Unauthorized:
      type: object
      properties:
        code:
          type: string
          example: "401"
        message:
          type: string
          example: "Sin permisos para ingresar al servicio."
        uuid:
          type: string
          example: "fe5641be-ffbc-4d73-ae66-0c9955c0d32f"
        timeestamp:
          type: string
          example: "2022-03-17T11:13:26.647"
    NotFound:
      type: object
      properties:
        notifications:
          type: object
          properties:
            code:
              type: string
              example: "404"
            message:
              type: string
              example: "No se ha encontrado el recurso."
            uuid:
              type: string
              example: "fe5641be-ffbc-4d73-ae66-0c9955c0d32f"
            timeestamp:
              type: string
              example: "2022-03-17T11:13:26.647"
    InternalServerError:
      type: object
      properties:
        timeestamp:
          type: integer
          example: 1583504404087
        status:
          type: integer
          example: 500
        error:
          type: string
          example: Internal Server Error
        exception:
          type: string
          example: "cl.gondev.commons.exceptions.CircuitOpenException"
        message:
          type: string
          example: "org.springframework.ws.soap.client.SoapFaultClientException: Internal Error"
        path:
          type: string
          example: "/ws-prueba-tecnica/v1/example"